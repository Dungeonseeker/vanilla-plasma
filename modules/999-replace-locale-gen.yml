name: replace-locale-gen
type: shell
commands:
- |
  echo '\
  #!/bin/sh\n\
  \n\
  set -e\n\
  \n\
  LOCALEGEN=/etc/locale.gen\n\
  LOCALES=/usr/share/i18n/locales\n\
  USER_LOCALES=/usr/local/share/i18n/locales\n\
  LOCALEDIR=/etc/locales\n\
  \n\
  [ -s "$LOCALEGEN" ] || exit 0\n\
  \n\
  [ "$1" = \'--keep-existing\' ] && KEEP=1 || KEEP=0\n\
  \n\
  # Remove old locale-archive before generating new locale data\n\
  [ "$KEEP" -eq 0 ] && rm -rf /usr/lib/locale/locale-archive || :\n\
  \n\
  # Create locale directory if non-existent\n\
  [ ! -d $LOCALEDIR ] && mkdir -p $LOCALEDIR || :\n\
  \n\
  umask 022\n\
  \n\
  is_entry_ok() {\n\
      if [ -z "$locale" ] || [ -z "$charset" ]; then\n\
          echo "error: Bad entry \'$locale $charset\'"\n\
          return 1\n\
      fi\n\
  }\n\
  \n\
  echo "Generating locales (this might take a while)..."\n\
  while read -r locale charset; do\n\
      if [ -z "$locale" ] || [ "${locale#\#}" != "$locale" ]; then continue; fi\n\
      is_entry_ok || continue\n\
  \n\
      if [ "$KEEP" -eq 1 ] && PERL_BADLANG=0 perl -MPOSIX -e \'exit 1 unless setlocale(LC_ALL, $ARGV[0])\' "$locale"; then continue; fi\n\
  \n\
      locale_base="${locale%%.*}"\n\
      locale_base="${locale_base%%@*}"\n\
      locale_at="${locale#*@}"\n\
      [ "$locale_at" = "$locale" ] && locale_at= || locale_at="@$locale_at"\n\
      printf "  %s.%s%s..." "$locale_base" "$charset" "$locale_at"\n\
  \n\
      if [ -e "$USER_LOCALES/$locale" ]; then\n\
          input="$USER_LOCALES/$locale"\n\
      elif [ -e "$LOCALES/$locale" ]; then\n\
          input="$locale"\n\
      else\n\
          input="$locale_base$locale_at"\n\
          if [ -e "$USER_LOCALES/$input" ]; then\n\
              input="$USER_LOCALES/$input"\n\
          fi\n\
      fi\n\
      localedef -i "$input" -c -f "$charset" -A /usr/share/locale/locale.alias "${LOCALEDIR}/${locale}" || :\n\
      echo " done"\n\
  done < "$LOCALEGEN"\n\
  echo "Generation complete."\n\
  ' > /usr/sbin/locale-gen
